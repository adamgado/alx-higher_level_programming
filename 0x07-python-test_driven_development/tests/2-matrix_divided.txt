Import module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test normal matrix:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Test one element matrix:
    >>> matrix_divided([[10]], 2)
    [[5.0]]

Test unmodified matrix:
    >>> m = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(m, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
    >>> m[1][2]
    6

Test divide by negative:
    >>> matrix_divided([[1, 2, 3], [6, 9, 12]], -3)
    [[-0.33, -0.67, -1.0], [-2.0, -3.0, -4.0]]

Test division by non num:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "x")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test division by zero:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test empty matrix type error:
    >>> matrix_divided([[]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with non number
    >>> matrix_divided([[1, 2, "x"], [4, 5, 6]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with different rows
    >>> matrix_divided([[1, 2, 3], [4, 5]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

